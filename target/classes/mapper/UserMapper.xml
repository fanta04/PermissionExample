<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace与相应的接口绑定-->
<mapper namespace="com.fanta.dao.UserDao">

    <resultMap id="userMap" type="One2Many">
        <id column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="lastLoginTime" property="lastLoginTime"/>
        <result column="deleteStatus" property="deleteStatus"/>
        <collection property="permissionList" ofType="String">
            <id column="permissionName" property="permissionName"/>
        </collection>
    </resultMap>

    <select id="countUser" resultType="Integer">
        select count(0)
        from sys_user u
        where u.delete_status = '1'
    </select>

    <select id="listUser" resultMap="userMap">
        select
            u.*,
            r.role_name                             roleName,
            concat(p.menu_name,p.permission_name)   permissionName
        from (
                select
                    id                                      userId,
                    username                                username,
                    nickname                                nickname,
                    role_id                                 roleId,
                    delete_status                           deleteStatus,
                    date_format(create_time,'%Y.%m.%d %T')  createTime,
                    date_format(update_time,'%Y.%m.%d %T')  updateTime
                from sys_user
                where delete_status = '1'
                order by id
                limit #{offSet},#{pageRow}
            ) u
            left join sys_role r on u.roleId = r.id
            left join sys_role_permission rp on r.id = rp.role_id
            left join sys_permission p on rp.permission_id = p.id
        order by u.userId
    </select>

    <select id="queryExistUsername" resultType="Integer">
        select count(0)
        from sys_user u
        where u.username = #{username}
    </select>

    <insert id="addUser" parameterType="com.alibaba.fastjson.JSONObject">
        insert into sys_user (username,nickname,password,role_id)
        values
        (#{username},#{nickname},#{password},#{roleId})
    </insert>

    <update id="updateUser" parameterType="com.alibaba.fastjson.JSONObject">
        update sys_user set
        nickname = #{nickname}
        <if test="password != '' and password != null">
            ,password = #{password}
        </if>
        ,role_id = #{roleId}
        ,delete_status = #{deleteStatus}
        where id = #{userId}
    </update>

    <delete id="deleteUser">
        delete from sys_user where id = #{userId}
    </delete>


    <resultMap id="roleMap" type="com.fanta.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
        <collection property="menus" ofType="com.fanta.util.model.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>

    <!--查询所有角色-->

    <select id="listRole" resultMap="roleMap">
        select
            r.id                    roleId,
            r.role_name             roleName,
            u.id                    userId,
            u.nickname              nickname,
            p.menu_code             menuCode,
            p.menu_name             menuName,
            p.id                    permissionId,
            p.permission_name       permissionName
        from sys_role r
            left join sys_user u on r.id = u.role_id
            left join sys_role_permission rp on r.id = rp.role_id
            left join sys_permission p on rp.permission_id = p.id
        where r.delete_status = '1'
        order by r.id,p.id
    </select>


    <!--
    角色的添加：
    1.sys_role表中添加角色名
    2.sys_role_permission表中添加角色权限
    -->

    <insert id="addRole" useGeneratedKeys="true" keyProperty="roleId">
        insert into sys_role
        (role_name)
        values (#{roleName})
    </insert>

    <insert id="addRolePermission" parameterType="com.alibaba.fastjson.JSONObject">
        insert into sys_role_permission
        (role_id,permission_id)
        values
        <foreach collection="permissions" index="index" item="item" separator=",">
            (#{roleId},#{item})
        </foreach>
    </insert>


    <!--
    角色的修改：
    1.查询一个角色的所有（旧）权限
    2.修改角色名
    3.插入该角色的新权限
    4.删除该角色的旧权限
    -->

    <!--1.查询一个角色的所有（旧）权限-->
    <resultMap id="roleInfo" type="com.fanta.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="permissions" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>

    <select id="getRoleAllInfo" resultMap="roleInfo">
        select
            r.id                roleId,
            r.role_name         roleName,
            p.id                permissionId
        from sys_role r
            left join sys_role_permission rp on r.id = rp.role_id
            left join sys_permission p on rp.permission_id = p.id and rp.delete_status = '1'
        where r.id = #{roleId}
    </select>

    <!--2.修改角色名-->
    <update id="updateRoleName" parameterType="com.alibaba.fastjson.JSONObject">
        update sys_role set role_name = #{roleName} where id = #{roleId}
    </update>

    <!--3.插入该角色新权限-->
    <!--addRolePermission-->

    <!--4.删除该角色的旧权限-->
    <update id="removeOldPermission" parameterType="com.alibaba.fastjson.JSONObject">
        update sys_role_permission
        set
        delete_status = '2'
        where role_id = #{roleId}
        and permission_id in (
            <foreach collection="permissions" item="item" index="index" separator=",">
                #{item}
            </foreach>
        )
    </update>


    <!--
    删除角色：
    1.修改sys_role表中角色的delete_status=2(不能删除admin角色)
    2.修改sys_role_permission表中角色的delete_status=2
    -->
    <update id="removeRole" >
        update sys_role
        set
        delete_status = '2'
        where id = #{roleId} and id != 1
    </update>

    <update id="removeRoleAllPermission">
        update sys_role_permission
        set
        delete_status = '2'
        where role_id = #{roleId}
    </update>
</mapper>